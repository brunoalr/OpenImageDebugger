# The MIT License (MIT)

# Copyright (c) 2015-2023 OpenImageDebugger contributors
# (https://github.com/OpenImageDebugger/OpenImageDebugger)

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

name: Build

on:
  pull_request:
  workflow_call:

jobs:
    build:
        name: Build
        strategy:
            fail-fast: false
            matrix:
                os: [ macos-13 ]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
              with:
                fetch-depth: 0
                submodules: 'recursive'

            - name: Install dependencies (MacOS)
              if: contains(matrix.os, 'macos')
              shell: zsh
              run: |
                setopt sh_word_split
                mkdir arm-homebrew && curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C arm-homebrew 
                alias arm-brew='$(pwd)/arm-homebrew/bin/brew'
                response=$(arm-brew fetch --force --bottle-tag=arm64_big_sur qt5 python3 | grep "Downloaded to")
                parsed=($response)
                arm-brew install $parsed[3]

            - name: Install dependencies (Windows)
              if: contains(matrix.os, 'windows')
              uses: jurplel/install-qt-action@2d518188e746defd451af981c3c901f463d99e29

            - name: Build
              shell: bash
              run: |
                if [ ${{ contains(matrix.os, 'macos') }} ]
                then
                  export PATH=/usr/local/opt/qt5/bin:$PATH;
                fi

                # see https://stackoverflow.com/a/24470998/5843895 and https://cliutils.gitlab.io/modern-cmake/chapters/intro/running.html
                cmake -S . -B build -DCMAKE_INSTALL_PREFIX=out -DCMAKE_CXX_COMPILER_TARGET=arm64-apple-darwin20.1.0
                cmake --build build --config Release --target install -j 2

            - name: Tar files
              shell: bash
              run: tar --strip-components 1 -cvf build-${{ matrix.os }}.tar out/OpenImageDebugger

            - name: Upload build
              uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
              with:
                name: build-${{ matrix.os }}
                path: |
                  build-${{ matrix.os }}.tar
